// Code generated by MockGen. DO NOT EDIT.
// Source: delete.go

// Package plan_test is a generated GoMock package.
package plan_test

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRowDeleter is a mock of RowDeleter interface
type MockRowDeleter struct {
	ctrl     *gomock.Controller
	recorder *MockRowDeleterMockRecorder
}

// MockRowDeleterMockRecorder is the mock recorder for MockRowDeleter
type MockRowDeleterMockRecorder struct {
	mock *MockRowDeleter
}

// NewMockRowDeleter creates a new mock instance
func NewMockRowDeleter(ctrl *gomock.Controller) *MockRowDeleter {
	mock := &MockRowDeleter{ctrl: ctrl}
	mock.recorder = &MockRowDeleterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRowDeleter) EXPECT() *MockRowDeleterMockRecorder {
	return m.recorder
}

// Delete mocks base method
func (m *MockRowDeleter) Delete(key int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", key)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete
func (mr *MockRowDeleterMockRecorder) Delete(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockRowDeleter)(nil).Delete), key)
}
